@model UberDeployer.WebApp.Core.Models.Deployment.IndexViewModel
@{
  ViewBag.Title = "Deployment | ÜberDeployer";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="content-title">
  <div class="row">
    <div class="col-md-12">
      <h1>Deployment</h1>
    </div>
  </div>
</div>
<div class="page-content inset">
  <div class="row">
    <div id="errorMsg" class="alert alert-error" style="display: none;">
    </div>
  </div>
  <div id="main-container">
    <div class="row" id="main-row">
      <div class="col-md-3">
        <label for="lst-projects" class="lst-header">Projects:</label>
        <div class="lst-filter">
          <input type="checkbox" id="chb-deployable-projects" @(Model.ShowOnlyDeployable ? "checked=\"checked\"" : "") />
          <label for="chb-deployable-projects">Only deployable</label>
        </div>
        <br />
        <select id="lst-projects" size="10"></select>
      </div>
      <div class="col-md-4">
        <label for="lst-project-configs" class="lst-header">Configurations:</label>
        <br />
        <select id="lst-project-configs" size="10"></select>
      </div>
      <div class="col-md-5">
        <label for="lst-project-config-builds" class="lst-header">Builds:</label>
        <br />
        <select id="lst-project-config-builds" size="10"></select>
      </div>
    </div>
    <div class="row">
      <div class="col-md-6">
        <label for="lst-environments" class="lst-header">Target environment:</label>
        <select id="lst-environments" size="5"></select>
      </div>
      <div class="col-md-6">
        <label for="lst-machines" class="lst-header">Target machines:</label>
        <select id="lst-machines" size="5" multiple="multiple"></select>
      </div>
    </div>
    <div class="row row-with-top-margin row-with-bottom-margin">
      <div class="col-md-6">
        @if (Model.IsCreatePackageVisible)
        {
          <button type="button" id="btn-create-package" name="btn-create-package" class="flat-butt" data-toggle="package-dir-modal" data-target="#package-dir-modal">
            <i class="fa fa-gift"></i> Create Package
          </button>
        }
        <button type="button" id="btn-version" class="flat-butt" onclick="javascript: getProjectVersion();">
          <i class="fa fa-crosshairs"></i> Version?
        </button>
      </div>
      <div class="col-md-6">
        <div class="row">
          <div class="col-md-8">
            <button type="button" id="btn-deploy" name="btn-deploy" class="flat-butt flat-primary-butt flat-butt-full-width" @(!Model.CanDeploy ? "disabled=\"disabled\"" : "")>
              <i class="fa fa-cloud-upload"></i> Deploy!
            </button>
          </div>
          <div class="col-md-4">
            <button type="button" id="btn-simulate" name="btn-simulate" class="flat-butt flat-info-butt flat-butt-full-width">
              <i class="fa fa-cloud"></i> Simulate
            </button>
          </div>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-12">
        <div id="txt-logs">
        </div>
        <button id="btn-clear-logs" class="flat-butt flat-gray-butt pull-right" onclick="javascript: clearLogs();">
          <i class="fa fa-trash-o"></i> Clear
        </button>
      </div>
    </div>
    <div class="row row-with-top-margin">
      <div class="col-md-6">
        <div id="pro-fucking-tip">
          <p>
            <small>Life pro tip of the fucking day:</small>
          </p>
          <p>
            <q><em>@Model.TipOfTheDay</em></q>
          </p>
          <p><small>Courtesy of <a href="http://fuckinghomepage.com/">Fucking Homepage</a>.</small></p>
        </div>
      </div>
      <div class="col-md-6">
        <div id="dev-life-container">
          <p class="dev-life-description">
            "@Model.FunnyGifDescription"
          </p>
          <img src="@Model.FunnyGifUrl" />
        </div>
      </div>
    </div>
  </div>
</div>


<div id="dlg-collect-credentials" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="dlg-collect-credentials-label" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="dlg-collect-credentials-label">Enter credentials</h3>
      </div>
      <div class="modal-body">
        <p>
          Credentials are needed to perform deployment of project <strong id="dlg-collect-credentials-project-name"></strong>
          (configuration: <strong id="dlg-collect-credentials-project-configuration-name"></strong>)
          to environment <strong id="dlg-collect-credentials-target-environment-name"></strong>.
        </p>
        <div class="form-horizontal">
          <div class="form-group">
            <label for="dlg-collect-credentials-username" class="col-sm-2 control-label">Username:</label>
            <div class="col-sm-10">
              <input type="text" id="dlg-collect-credentials-username" name="dlg-collect-credentials-username" class="form-control" readonly="readonly" />
            </div>
          </div>
          <div class="form-group">
            <label for="dlg-collect-credentials-machine-name" class="col-sm-2 control-label">Machine:</label>
            <div class="col-sm-10">
              <input type="text" id="dlg-collect-credentials-machine-name" name="dlg-collect-credentials-machine-name" class="form-control" readonly="readonly" />
            </div>
          </div>
          <div class="form-group">
            <label for="dlg-collect-credentials-password" class="col-sm-2 control-label">Password:</label>
            <div class="col-sm-10">
              <input type="password" id="dlg-collect-credentials-password" name="dlg-collect-credentials-password" class="form-control" />
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button id="dlg-collect-credentials-ok" class="btn btn-primary">OK</button>
        <button class="btn" data-dismiss="modal" aria-hidden="true">Cancel</button>
      </div>
      <input type="hidden" id="dlg-collect-credentials-deployment-id" name="dlg-collect-credentials-deployment-id" value="" />
    </div>
  </div>
</div>

<div id="package-dir-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="package-dir-modal-label" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h3 id="package-dir-modal-label">Enter directory path for manual deployment package.</h3>
      </div>
      <div class="modal-body">
        <div class="form-horizontal">
          <div class="form-group">
            <label for="txt-package-dir" class="col-sm-2 control-label">Directory:</label>
            <div class="col-sm-10">
              <input type="text" id="txt-package-dir" class="form-control" required="required" />
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button id="btn-package-ok" class="btn btn-primary">OK</button>
        <button id="btn-package-cancel" data-dismiss="modal" aria-hidden="true" class="btn">Cancel</button>
      </div>
    </div>
  </div>
</div>

@section OptionalScripts {
  <script type="text/javascript">
    $(document).ready(function() {
      var initData = {
        userCanDeploy: @(Model.CanDeploy ? "true" : "false"),
        initialSelection: {
          targetEnvironmentName: @Html.Raw(Model.InitialSelection != null ? string.Format("'{0}'", Model.InitialSelection.TargetEnvironmentName) : "null"),
          projectName: @Html.Raw(Model.InitialSelection != null && !string.IsNullOrEmpty(Model.InitialSelection.ProjectName) ? string.Format("'{0}'", Model.InitialSelection.ProjectName) : "null"),
          projectConfigurationName: @Html.Raw(Model.InitialSelection != null && !string.IsNullOrEmpty(Model.InitialSelection.ProjectConfigurationName) ? string.Format("'{0}'", Model.InitialSelection.ProjectConfigurationName) : "null"),
          projectConfigurationBuildId: @Html.Raw(Model.InitialSelection != null && !string.IsNullOrEmpty(Model.InitialSelection.ProjectConfigurationBuildId) ? string.Format("'{0}'", Model.InitialSelection.ProjectConfigurationBuildId) : "null")
          }
      };

      initializeDeploymentPage(initData);
    })
  </script>
}